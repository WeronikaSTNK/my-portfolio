{"version":3,"sources":["images/avatar.jpg","images/polandrock.png","Layout/Header.js","Layout/utils.js","Layout/About.js","Layout/Footer.js","Layout/Skills.js","Layout/components/ContactForm.js","Layout/Contact.js","Layout/Navigation.js","Layout/Portfolio.js","serviceWorker.js","index.js"],"names":["module","exports","Header","id","src","avatar","alt","className","href","icon","faGithub","size","faLinkedin","behavior","buttonBackgroundColor","iconType","style","fontSize","targetId","countToWoodstock","year","month","day","dateNow","Date","diff","getTime","days","Math","floor","About","props","content","about","introduction1","introduction2","woodstockCounter","additionalInfo","polandrock","Footer","faHeart","Skills","soft_skills","skill_team","skill_communication","skill_ambitious","skill_learn","hard_skills","html","CSS","react","javascript","git","github","jira","sass","npm","hover","faUsers","faComments","faGraduationCap","faChalkboardTeacher","faHtml5","faCss3","faJsSquare","faReact","faSass","faGit","faJira","faNpm","ContactForm","handleInputChange","e","preventDefault","target","name","value","setState","clearForm","email","message","sentMessage","validateMail","templateParams","state","auto_reply","language","successMessage","failMessage","emailjs","then","res","messageStatus","color","setTimeout","console","log","status","text","err","errors","formIsValid","lang","this","length","test","your_name","your_email","your_message","send_message","htmlFor","type","required","onChange","cols","rows","onClick","Component","Contact","contact","send_me_a_message","method","action","Navigation","langHandler","handleMenuClick","home","faBars","selector","Portfolio","mobile","scrollY","openMenu","scroll","getData","translation","filter","element","navigationToggle","mainNav","document","getElementById","addEventListener","classList","toggle","handleScroll","window","deviceWidth","innerWidth","innerHeight","checkDevice","removeEventListener","scrollHandler","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.4864fd2a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.1dd42986.jpg\";","module.exports = __webpack_public_path__ + \"static/media/polandrock.e20a2fde.png\";","import * as React from 'react'\nimport avatar from \"../images/avatar.jpg\";\nimport \"../Styles/main.css\";\nimport ScrollButton from \"react-scroll-button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub, faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\n\nexport const Header = () => {\n  return (\n    <header id=\"header\">\n      <div>\n        <img src={avatar} alt=\"Logo\" />\n        <div className=\"socialMedia\">\n          <a href=\"https://github.com/WeronikaSTNK\">\n            <FontAwesomeIcon className=\"iconHeader\" icon={faGithub} size=\"3x\" />\n          </a>\n          <a href=\"https://www.linkedin.com/in/weronika-stankiewicz\">\n            <FontAwesomeIcon\n              className=\"iconHeader\"\n              icon={faLinkedin}\n              size=\"3x\"\n            />\n          </a>\n        </div>\n      </div>\n      <section className=\"logoName\">\n        <h1>\n          <div className=\"headerDarkName\">Weronika  Stankiewicz</div>\n        </h1>\n        <h3>\n          <div className=\"headerLightName\">Junior Frontend Developer </div>\n        </h3>\n    <div id=\"scrollDownButton\">\n  <a href=\"#about\"><span></span></a>\n</div>\n      <ScrollButton\n        behavior={\"smooth\"}\n        buttonBackgroundColor={\"var(--dark-main-color)\"}\n        iconType={\"arrow-up\"}\n        style={{ fontSize: \"24px\" }}\n        targetId={\"header\"}\n      />\n      </section>\n    </header>\n  );\n};\n\nexport default Header;\n","\n\n  const countToWoodstock = (year, month, day) => {\n    const dateNow = new Date();\n    const dateOfWoodstock = new Date(year, month, day);\n    let diff = dateOfWoodstock.getTime() - dateNow.getTime();\n    const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n    if (days === 1) return \"1 dzień\";\n    else return days + \" dni\";\n  };\n\n  export default countToWoodstock\n","import * as React from 'react'\nimport   \"../Styles/about.css\";\nimport polandrock from \"../images/polandrock.png\";\nimport countToWoodstock from \"./utils\";\nimport PropTypes from 'prop-types';\n\nexport const About = props => {\n  const {\n    about,\n    introduction1,\n    introduction2,\n    woodstockCounter,\n    additionalInfo\n  } = props.content;\n\n  return (\n    <>\n      <div className=\"aboutSection\" id=\"about\">\n        <h3 className=\"aboutMe\"> {about}</h3>\n        <div className=\"introduction\">\n          <p className=\"aboutMeIntro\">{introduction1} </p>\n                <p className=\"aboutMeIntro\"> {additionalInfo}</p>\n          <p className=\"aboutMeIntro\">{introduction2} </p>\n          <div className=\"woodstockWrapper\">\n            <div className=\"woodstock\">\n              <img src={polandrock} alt=\"PolandRock Festival\" />\n              <div className=\"counter\"> {countToWoodstock(2020, 7, 0)} </div>\n              <p> {woodstockCounter} </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\nAbout.propTypes = {\n  about: PropTypes.string,\n    introduction1: PropTypes.string,\n    introduction2:PropTypes.string,\n    woodstockCounter: PropTypes.string,\n    additionalInfo: PropTypes.string,\n}\nexport default About;\n","import * as React from 'react'\nimport   \"../Styles/footer.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const Footer = () => {\n  return (\n    <footer>\n      <p>\n        Created with\n        <FontAwesomeIcon icon={faHeart} />\n      </p>\n      <p> weronika.stankiewicz94@gmail.com &copy;  2020</p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import * as React from 'react'\nimport content from \"../content.json\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faUsers,\n  faComments,\n  faGraduationCap,\n  faChalkboardTeacher\n} from \"@fortawesome/free-solid-svg-icons\";\nimport PropTypes from 'prop-types';\nimport {\n  faReact,\n  faHtml5,\n  faCss3,\n  faJsSquare,\n  faGit,\n  faGithub,\n  faSass,\n  faJira,\n  faNpm\n} from \"@fortawesome/free-brands-svg-icons\";\nexport const Skills = props => {\n  const {\n    soft_skills,\n    skill_team,\n    skill_communication,\n    skill_ambitious,\n    skill_learn,\n    hard_skills,\n    html,\n    CSS,\n    react,\n    javascript,\n    git,\n    github,\n    jira,\n    sass,\n    npm,\n    hover\n  } = props.content;\n\n  return (\n    <div className=\"skills\">\n      <h4 className=\"skillsHeader\"> {soft_skills} </h4>\n      <p className=\"descriptionNone\"> {hover}</p>\n      <div className=\"skillset\">\n        <FontAwesomeIcon className=\"icon\" icon={faUsers} size=\"3x\" />\n        <span className=\"description\"> {skill_team}</span>\n        <FontAwesomeIcon className=\"icon\" icon={faComments} size=\"3x\" />\n        <span className=\"description\"> {skill_communication}</span>\n        <FontAwesomeIcon className=\"icon\" icon={faGraduationCap} size=\"3x\" />\n        <span className=\"description\"> {skill_ambitious}</span>\n        <FontAwesomeIcon\n          className=\"icon\"\n          icon={faChalkboardTeacher}\n          size=\"2x\"\n        />\n        <span className=\"description\"> {skill_learn}</span>\n      </div>\n      <h4 className=\"skillsHeader\"> {hard_skills}</h4>\n      <div className=\"skillset\">\n        <FontAwesomeIcon className=\"icon\" icon={faHtml5} size=\"3x\" />\n        <span className=\"description\"> {html}</span>\n        <FontAwesomeIcon className=\"icon\" icon={faCss3} size=\"3x\" />\n        <span className=\"description\"> {CSS}</span>\n        <FontAwesomeIcon className=\"icon\" icon={faJsSquare} size=\"3x\" />\n        <span className=\"description\"> {javascript}</span>\n        <FontAwesomeIcon className=\"icon\" icon={faReact} size=\"3x\" />\n        <span className=\"description\"> {react}</span>\n        <FontAwesomeIcon className=\"icon\" icon={faSass} size=\"3x\" />\n        <span className=\"description\"> {sass}</span>\n        <FontAwesomeIcon className=\"icon\" icon={faGithub} size=\"3x\" />\n        <span className=\"description\"> {github}</span>\n        <FontAwesomeIcon className=\"icon\" icon={faGit} size=\"3x\" />\n        <span className=\"description\"> {git}</span>\n        <FontAwesomeIcon className=\"icon\" icon={faJira} size=\"3x\" />\n        <span className=\"description\"> {jira}</span>\n        <FontAwesomeIcon className=\"icon\" icon={faNpm} size=\"3x\" />\n        <span className=\"description\"> {npm}</span>\n      </div>\n      <h4>Dodatkowo:</h4>\n      <span> Potrafię pracować w metodologii<strong>SCRUM,</strong> znam framework do testowania E2E <strong>Cypress.io.</strong>  Korzystam z<strong> Visual Studio Code.</strong></span>\n    </div>\n  );\n};\nSkills.propTypes = {\n      soft_skills: PropTypes.string,\n    skill_team:PropTypes.string,\n    skill_communication: PropTypes.string,\n    skill_ambitious: PropTypes.string,\n    skill_learn: PropTypes.string,\n    hard_skills: PropTypes.string,\n    html: PropTypes.string,\n    CSS: PropTypes.string,\n    react: PropTypes.string,\n    javascript: PropTypes.string,\n    git: PropTypes.string,\n    github: PropTypes.string,\n    jira: PropTypes.string,\n    sass: PropTypes.string,\n    npm:PropTypes.string,\n    hove: PropTypes.string,\n}\nexport default Skills;\n","\nimport React, { Component } from 'react';\nimport * as emailjs from 'emailjs-com';\n\nclass ContactForm extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      name: '',\n      email: '',\n      message: '',\n      errors: {\n        name: '',\n        email: '',\n        message: ''\n      },\n      messageStatus: '',\n      color: ''\n    }\n  }\n\n  handleInputChange = (e) => {\n    e.preventDefault();\n    const target = e.target\n    const name = target.name\n    const value = target.value\n    this.setState({ [name]: value })\n  }\n\n\n  validateMail() {\n    let errors = {}\n    let formIsValid = true\n    const lang = this.props.language\n\n    if (!this.state.name || this.state.name.length < 3 || this.state.name.length > 25) {\n      errors.name = lang === \"pl\" ? 'Imię powinno zawierać minimum 3 i maksymalnie 25 znaków' : 'Your name should be between 3 and 25 characters long'\n      formIsValid = false\n    }\n    if (!this.state.message || this.state.message.length < 10 || this.state.message.length > 1000) {\n      errors.message = lang === \"pl\" ? 'Wiadomość powinna zawierać od 10 do 1000 znaków' : 'Your message should consist between 10 and 1000 characters'\n      formIsValid = false\n    }\n    if (!this.state.email || this.state.email.length < 3) {\n      errors.email = lang === \"pl\" ? 'Email powinien składać się conajmniej z 3 znaków ' : 'Use minimum 3 symbols'\n      formIsValid = false\n    }\n//regexp email\n    let pattern = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/\n\n    if (!pattern.test(this.state.email)) {\n      errors.email = lang === \"pl\" ? 'Niepoprawny' : 'Enter a valid email address'\n      formIsValid = false\n    }\n    this.setState({\n      errors\n    })\n    return formIsValid\n  }\n\n  clearForm = () => {\n    this.setState({\n      name: '',\n      email: '',\n      message: ''\n    })\n  }\n\n  sentMessage = (e) => {\n    e.preventDefault()\n    if (!this.validateMail()) {\n      return\n    }\n\n    const templateParams = {\n      name: this.state.name,\n      email: this.state.email,\n      message: this.state.message,\n      auto_reply: this.props.language === \"pl\" ? 'Dziękuję za wiadomość' : 'Thank you for your message'\n    }\n\n    const successMessage = this.props.language === \"pl\" ? 'Wiadomość została wysłana' : 'Message send successful';\n\n    const failMessage = this.props.language === \"pl\" ? 'Wysyłanie wiadomości nie powiodło się' : 'Failed to send the message';\n\n    const sendingSuccessfully = () => {\n      this.setState({\n        messageStatus: successMessage,\n        color: 'green'\n      })\n\n      setTimeout(() => {\n        this.setState({ messageStatus: false })\n      }, 3000)\n    }\n\n    const sendingFailed = () => {\n      this.setState({\n        messageStatus: failMessage,\n        color: 'red'\n      })\n\n      setTimeout(() => {\n        this.setState({ messageStatus: false })\n      }, 3000)\n    }\n    emailjs.send('gmail', 'template_igc4o3aJ', templateParams, 'user_BayiJy60hGcj8YA4EPcyb')\n      .then(function (res) {\n        // SUCCESS\n        sendingSuccessfully();\n        console.log(successMessage, res.status, res.text)\n      }, function (err) {\n\n        //FAIL\n        sendingFailed();\n        console.log(err);\n      })\n\n    setTimeout(this.clearForm, 3000);\n\n  }\n\n  render() {\n    const { your_name, your_email, your_message, send_message } = this.props.content;\n    return (\n      <form className='contactForm'>\n\n        <label htmlFor=\"name\">{your_name}</label>\n        <input type=\"text\" className=\"name\" name=\"name\" id=\"name\"  required onChange={this.handleInputChange} value={this.state.name} />\n        {this.state.errors.name ? <span className=\"error\"> {this.state.errors.name}</span> : \"\"}\n\n        <label htmlFor=\"email\">{your_email}</label>\n        <input type=\"email\" className=\"email\" name=\"email\" id=\"email\"   required onChange={this.handleInputChange} value={this.state.email} />\n        {this.state.errors.email ? <span className=\"error\"> {this.state.errors.email}</span> : \"\"}\n\n        <label htmlFor=\"message\">{your_message}</label>\n        <textarea className=\"message\" name=\"message\" id=\"message\" cols=\"30\" rows=\"8\"  required onChange={this.handleInputChange} value={this.state.message}></textarea>\n        {this.state.errors.message ? <span className=\"error\"> {this.state.errors.message}</span> : \"\"}\n\n        <button className=\"formButton\" type=\"submit\" onClick={this.sentMessage} >{send_message}</button>\n        {this.state.messageStatus ? <span className={this.state.color}> {this.state.messageStatus}</span> : \"\"}\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import * as React from 'react'\nimport  \"../Styles/main.css\";\nimport content from \"../content.json\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub, faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\nimport ContactForm from \"./components/ContactForm\";\nimport PropTypes from 'prop-types';\n\nexport const Contact = props => {\n  const { contact, send_me_a_message } = props.content;\n  return (\n    <div className=\"contactSection\">\n      <h3> {contact}</h3>\n      <div className=\"socialMedia\">\n        <a href=\"https://github.com/WeronikaSTNK\">\n          <FontAwesomeIcon className=\"iconHeader\" icon={faGithub} size=\"3x\" />\n        </a>\n        <a href=\"https://www.linkedin.com/in/weronika-stankiewicz\">\n          <FontAwesomeIcon className=\"iconHeader\" icon={faLinkedin} size=\"3x\" />\n        </a>\n      </div>\n      <div className=\"contactFormWrapper\">\n        <p className=\"sendMeAMessage\"> {send_me_a_message}</p>\n        <ContactForm\n          id=\"mainContactForm\"\n          className=\"contactForm\"\n          name=\"contactForm\"\n          method=\"post\"\n          action=\"\"\n          content={props.content}\n          language={props.content.language}\n        />\n      </div>\n    </div>\n  );\n};\nContact.propTypes = {\n  contact: PropTypes.string,\n  send_me_a_message: PropTypes.string\n}\n\nexport default Contact;\n","import * as React from \"react\";\r\nimport ScrollIntoView from \"react-scroll-into-view\";\r\nimport content from \"../content.json\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"../Styles/navigation.css\";\r\nexport const Navigation = props => {\r\n  const {\r\n    langHandler,\r\n    language,\r\nhandleMenuClick\r\n  } = props;\r\n  const { about, contact, home } = props.content;\r\n\r\n  return (\r\n    <div className=\"navigation\">\r\n      <nav className=\"navbar\" onClick={handleMenuClick}>\r\n        <span className=\"navbar-toggle\" id=\"toggle\">\r\n          <FontAwesomeIcon icon={faBars} size=\"xs\" />\r\n        </span>\r\n           <div className=\"languageOptions\">\r\n          <button\r\n            className={\r\n              language === \"pl\"\r\n                ? \"navigationButton current\"\r\n                : \"navigationButton\"\r\n            }\r\n            value=\"pl\"\r\n            onClick={langHandler}\r\n          >\r\n            PL\r\n          </button>\r\n          <button\r\n            className={\r\n              language === \"en\"\r\n                ? \"navigationButton current\"\r\n                : \"navigationButton\"\r\n            }\r\n            value=\"en\"\r\n            onClick={langHandler}\r\n          >\r\n            EN\r\n          </button>\r\n        </div>\r\n        <ul className=\"main-nav\" id=\"menu\">\r\n          <li className=\"nav-links\" onClick={handleMenuClick}>\r\n            <ScrollIntoView selector=\"header\">\r\n              <button className=\"navigationListButton \" id=\"btn\">\r\n                {home}\r\n              </button>\r\n            </ScrollIntoView>\r\n          </li>\r\n          <li className=\"nav-links\" onClick={handleMenuClick}>\r\n            <ScrollIntoView selector=\".aboutSection\">\r\n              <button className=\"navigationListButton\">\r\n                {about}\r\n              </button>\r\n            </ScrollIntoView>\r\n          </li>\r\n          <li className=\"nav-links\" onClick={handleMenuClick}>\r\n            <ScrollIntoView selector=\".contactSection\">\r\n              <button className=\"navigationListButton\">\r\n                {contact}\r\n              </button>\r\n            </ScrollIntoView>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\nexport default Navigation;\r\n","import React, { Component } from \"react\";\r\nimport Header from \"./Header\";\r\nimport About from \"./About\";\r\nimport content from \"../content.json\";\r\nimport Footer from \"./Footer\";\r\nimport Skills from \"./Skills\";\r\nimport Contact from \"./Contact\";\r\nimport { Navigation } from \"./Navigation\";\r\nclass Portfolio extends Component {\r\n  state = {\r\n    language: \"pl\",\r\n    content: {},\r\n    mobile: true,\r\n    scrollY: 0,\r\n    openMenu: false,\r\n    scroll: false,\r\n  };\r\n\r\n  getData = (lang = \"pl\") => {\r\n    const translation = content.filter((element) => element.language === lang);\r\n    this.setState({ content: translation[0] });\r\n  };\r\n\r\n  checkDevice() {\r\n    const deviceWidth = window.innerWidth > 0 ? window.innerWidth : \"640\";\r\n    const deviceHeight = window.innerHeight > 0 ? window.innerHeight : \"360\";\r\n\r\n    if (deviceHeight >= 768 && deviceWidth >= 1024) {\r\n      this.setState({ mobile: false });\r\n    } else {\r\n      this.setState({ mobile: true });\r\n    }\r\n  }\r\n\r\n  navigationToggle = (e) => {\r\n    const mainNav = document.getElementById(\"menu\");\r\n    const navBarToggle = document.getElementById(\"toggle\");\r\n    navBarToggle.addEventListener(\"click\", function () {\r\n      mainNav.classList.toggle(\"active\");\r\n    });\r\n  };\r\n\r\n  handleMenuClick = () => {\r\n    this.setState({ openMenu: !this.state.openMenu });\r\n  };\r\n\r\n  langHandler = (e) => {\r\n    const language = e.target.value;\r\n    this.setState({ language });\r\n  };\r\n\r\n  handleScroll = (e) => {\r\n    const scrollY = window.scrollY;\r\n    this.setState({ scrollY });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n    this.checkDevice();\r\n    window.addEventListener(\"scroll\", this.handleScroll);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"scroll\", this.handleScroll);\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.state.language !== this.state.content.language) {\r\n      this.getData(this.state.language);\r\n    }\r\n    this.navigationToggle();\r\n  }\r\n\r\n  render() {\r\n    const { language, content, scrollY } = this.state;\r\n    console.log(content);\r\n    return (\r\n      <>\r\n        <Navigation\r\n          navigationToggle={this.navigationToggle}\r\n          langHandler={this.langHandler}\r\n          scrollHandler={this.scrollHandler}\r\n          language={language}\r\n          content={content}\r\n          scrollY={scrollY}\r\n        />\r\n        <Header />\r\n        <main>\r\n          <About content={content} scrollY={scrollY} />\r\n          <Skills content={content} scrollY={scrollY} />\r\n          <Contact content={content} scrollY={scrollY} language={language} />\r\n        </main>\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Portfolio;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Portfolio from './Layout/Portfolio';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/font-awesome/css/font-awesome.min.css';\n\nReactDOM.render(<Portfolio />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}